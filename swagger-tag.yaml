openapi: 3.0.0
info:
  title: Tag API
  version: 1.0.0
paths:
  /api/tags:
    get:
      summary: Get all tags (paginated)
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: pageSize
          schema: { type: integer }
        - in: query
          name: name
          schema: { type: string }
      responses:
        200:
          description: List of tags
    post:
      summary: Create a tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                description: { type: string }
      responses:
        200:
          description: Tag created
  /api/tags/{id}:
    get:
      summary: Get tag by ID
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        200:
          description: Tag object
    put:
      summary: Update tag
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                description: { type: string }
      responses:
        200:
          description: Tag updated
    delete:
      summary: Delete tag
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        200:
          description: Tag deleted
  /api/tags/assign:
    post:
      summary: Assign tag to entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entity: { type: string }
                entityId: { type: integer }
                tagId: { type: integer }
      responses:
        200:
          description: Tag assigned
  /api/tags/remove:
    post:
      summary: Remove tag from entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entity: { type: string }
                entityId: { type: integer }
                tagId: { type: integer }
      responses:
        200:
          description: Tag removed
  /api/tags/{entity}/{entityId}/tags:
    get:
      summary: Get tags for an entity
      parameters:
        - in: path
          name: entity
          required: true
          schema: { type: string }
        - in: path
          name: entityId
          required: true
          schema: { type: integer }
      responses:
        200:
          description: List of tags for entity
